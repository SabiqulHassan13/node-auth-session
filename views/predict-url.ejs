<style>
  .img-container {
    max-width: 30rem;
    margin: 0 auto;
  }

  .img-item {
    width: 25rem;
    /* height: 25rem; */
  }
</style>

<section>
  <h2>Predict by url</h2>
  <div id="showResult"></div>
  <div id="resultFormat"></div>

  <div class="img-container">
    <img id="imgItem" class="img-item" crossorigin="anonymous" />
    <div id="loadContainer">
      <input type="text" name="imgUrl" id="imgUrl" />
      <button id="btnSubmit">Load</button>
    </div>
  </div>
</section>

<!-- Load TensorFlow.js. This is required to use MobileNet. -->
<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.0.1"></script>
<!-- Load the MobileNet model. -->
<script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet@1.0.0"></script>
<script>
  const imgItemEl = document.getElementById("imgItem");

  const loadContainerEl = document.getElementById("loadContainer");
  const imgUrlEl = document.getElementById("imgUrl");
  const btnSubmitEl = document.getElementById("btnSubmit");

  const showResultEl = document.getElementById("showResult");
  const resultFormatEl = document.getElementById("resultFormat");

  btnSubmitEl.onclick = () => {
    const targetUrl = imgUrlEl.value;
    console.log(targetUrl);

    imgItemEl.src = targetUrl;
    showResultEl.innerText = "Loading ...";
  };

  imgItemEl.onload = () => {
    loadContainerEl.style.display = "none";

    predictModel();
  };

  function predictModel() {
    //   Load the model.
    mobilenet
      .load()
      .then((model) => {
        // Classify the image.
        model.classify(imgItemEl).then((predictions) => {
          console.log("Predictions: ");
          console.log(predictions);

          showResultEl.innerText = "Result Found ...";
          showPredictions(predictions);
        });
      })
      .catch((err) => {
        showResultEl.innerText = "Result Not Found ...";
      });
  }

  function showPredictions(predictions) {
    // insert predict item 1
    const predItem1 = document.createElement("p");
    predItem1.textContent = `Classname: ${
      predictions[0].className
    } & Probability: ${(predictions[0].probability * 100).toFixed(2)} %`;

    resultFormatEl.appendChild(predItem1);

    // insert predict item 2
    const predItem2 = document.createElement("p");
    predItem2.textContent = `Classname: ${
      predictions[1].className
    } & Probability: ${(predictions[1].probability * 100).toFixed(2)} %`;

    resultFormatEl.appendChild(predItem2);

    // insert predict item 3
    const predItem3 = document.createElement("p");
    predItem3.textContent = `Classname: ${
      predictions[2].className
    } & Probability: ${(predictions[2].probability * 100).toFixed(2)} %`;

    resultFormatEl.appendChild(predItem3);
  }
</script>
